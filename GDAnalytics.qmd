---
title: "GDAnalytics"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(ggplot2)
library(tidyquant)
library(plotly)
library(data.table)
library(lubridate)
library(zoo)
library(tidytext)
```

```{r}
#connors data load
bp <- read.csv("C:/Users/conno/OneDrive/Desktop/Winter 24/FAT/GitHub/AlgoTradingGD/AlgoTradingGD/BP.csv")
shell <- read.csv("C:/Users/conno/OneDrive/Desktop/Winter 24/FAT/GitHub/AlgoTradingGD/AlgoTradingGD/Shell.csv")
exxon <- read.csv("C:/Users/conno/OneDrive/Desktop/Winter 24/FAT/GitHub/AlgoTradingGD/AlgoTradingGD/exxonmobil.csv")
chevron <- read.csv("C:/Users/conno/OneDrive/Desktop/Winter 24/FAT/GitHub/AlgoTradingGD/AlgoTradingGD/chevron.csv")
bp <- bp %>%  select(-X)
shell <- shell %>% select(-X)
```

```{r}

dflist <- list(bp, shell, exxon, chevron)
ratings <- rbindlist(dflist, fill = FALSE, idcol = NULL)
ratings <- ratings %>%
  mutate("Company" = name1, 
         'reviewtext' = reviewBody,
         'Rating' = ratingValue,
          date = case_when(
          is.na(lubridate::mdy(date)) ~ NA_Date_,
          TRUE ~ lubridate::mdy(date)
          )
          ) %>%
          transmute(Company, name, Rating, reviewtext, date)
 


```

```{r}
# visuals
  
review_comb %>% plot_ly(x = ~date,
                    y = ~meanRateMon,
                    color = ~company,
                    type = 'scatter',
                    mode = 'lines')
```

```{r}
# Returns Data
tick <- c('SHEL', 'XOM', 'BP', 'CVX')

prices <- tidyquant::tq_get(tick, get = 'stock.prices', from = '2008-01-01', to = Sys.Date())
ret <- prices %>% group_by(symbol) %>%  mutate(returns = log(adjusted/lag(adjusted)))

ret %>% filter(date > '2020-01-01') %>% plot_ly(x = ~date,
                    y = ~adjusted,
                    color = ~symbol,
                    type = 'scatter',
                    mode = 'lines')

```

```{r}
# NLP
ratings %>% select(Company, reviewtext, date) %>%  filter(str_detect(reviewtext, c('money|Money|Pay|pay|Compensation|compensation'))) %>% count(Company) %>% 
ggplot(aes(
x = Company,
y = n,
fill = Company,
)) +
geom_bar(stat = "identity") + coord_flip() +
theme(legend.position = "none") + ggtitle("Ratings That Contain The Word 'money', 'pay', or 'compensation'")

#N-Gram

  

```
